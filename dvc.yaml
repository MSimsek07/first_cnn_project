stages:
  data_ingestion:
    #command
    cmd: python src/cnnClassifier/pipeline/stage_01_data_ingestion.py
    #dependencies
    deps:
      - src/cnnClassifier/pipeline/stage_01_data_ingestion.py
      - config/config.yaml
    outs:
      - artifacts/data_ingestion/CT-KIDNEY-DATASET-Normal-Tumor
  
  #------------------------------------------------------------------------------------
  prepare_base_model:
    #command
    cmd: python src/cnnClassifier/pipeline/stage_02_prepare_base_model.py
    #dependencies
    deps:
      - src/cnnClassifier/pipeline/stage_02_prepare_base_model.py
      - config/config.yaml
    params:
      - IMAGE_SIZE
      - INCLUDE_TOP
      - CLASSES
      - WEIGHTS
      - LEARNING_RATE
    outs:
      - artifacts/prepare_base_model

  #------------------------------------------------------------------------------------
  training:
    #command
    cmd: python src/cnnClassifier/pipeline/stage_03_model_training.py
    #dependencies
    deps:
      - src/cnnClassifier/pipeline/stage_03_model_training.py
      #- src/cnnClassifier/components/prepare_callbakcs.py
      - artifacts/data_ingestion/CT-KIDNEY-DATASET-Normal-Tumor 
      - artifacts/prepare_base_model
      - config/config.yaml
    params:
      - IMAGE_SIZE
      - EPOCHS
      - BATCH_SIZE
      - AUGMENTATION
    outs:
      - artifacts/training/model.h5
  #------------------------------------------------------------------------------------
  evaluation:
    #command
    cmd: python src/cnnClassifier/pipeline/stage_04_model_evaluation.py
    #dependencies
    deps:
      - src/cnnClassifier/pipeline/stage_04_model_evaluation.py
      - artifacts/data_ingestion/CT-KIDNEY-DATASET-Normal-Tumor 
      - artifacts/training/model.h5
      - config/config.yaml
    params:
      - IMAGE_SIZE
      - BATCH_SIZE
    metrics:
      - scores.json:
          cache: false